version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/home/app
      - pip-cache:/home/app/.cache/pip
    environment:
      - PYTHONPATH=/home/app/src
      - ENVIRONMENT=development
    depends_on:
      - redis
      - prometheus
    networks:
      - app-network

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - app-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - app-network

  # Jupyter for development and experimentation
  jupyter:
    build:
      context: .
      target: development
    ports:
      - "8888:8888"
    volumes:
      - .:/home/app
      - jupyter-data:/home/app/.jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: >
      bash -c "pip install --user jupyterlab &&
               jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
               --NotebookApp.token='' --NotebookApp.password=''"
    networks:
      - app-network

  # GPU training service (uncomment for GPU-enabled training)
  # training:
  #   build:
  #     context: .
  #     target: gpu
  #   runtime: nvidia
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #   volumes:
  #     - ./data:/home/app/data
  #     - ./models:/home/app/models
  #   networks:
  #     - app-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
  jupyter-data:
  pip-cache:

networks:
  app-network:
    driver: bridge