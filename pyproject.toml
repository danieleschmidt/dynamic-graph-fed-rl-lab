[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dynamic-graph-fed-rl-lab"
version = "0.1.0"
description = "Federated Actor-Critic framework that learns policies over time-evolving graphs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@terragon.ai"}
]
keywords = ["reinforcement-learning", "federated-learning", "graph-neural-networks", "jax", "quantum-computing", "quantum-advantage"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "jax>=0.4.0",
    "jaxlib>=0.4.0",
    "numpy>=1.21.0",
    "networkx>=2.8",
    "gymnasium>=0.28.0",
    "torch>=2.0.0",
    "torch-geometric>=2.3.0",
]

[project.optional-dependencies]
gpu = [
    "jax[cuda12_pip]",
    "torch>=2.0.0+cu118",
]
distributed = [
    "ray[rllib]>=2.5.0",
    "wandb>=0.15.0",
]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "pytest-benchmark>=4.0",
    "black>=23.0",
    "ruff>=0.0.270",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "bandit>=1.7.0",
    "safety>=2.0",
    "pip-audit>=2.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.2",
    "myst-parser>=2.0",
]
monitoring = [
    "prometheus-client>=0.16.0",
    "grafana-api>=1.0.3",
]
quantum = [
    "qiskit>=0.45.0",
    "qiskit-ibm-runtime>=0.15.0",
    "cirq>=1.3.0",
    "cirq-google>=1.3.0",
    "amazon-braket-sdk>=1.60.0",
    "boto3>=1.28.0",
]

[project.urls]
Homepage = "https://github.com/danieleschmidt/dynamic-graph-fed-rl-lab"
Documentation = "https://dynamic-graph-fed-rl.readthedocs.io"
Repository = "https://github.com/danieleschmidt/dynamic-graph-fed-rl-lab.git"
Issues = "https://github.com/danieleschmidt/dynamic-graph-fed-rl-lab/issues"
Changelog = "https://github.com/danieleschmidt/dynamic-graph-fed-rl-lab/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[project.scripts]
dgfrl = "dynamic_graph_fed_rl.cli:main"
dgfrl-server = "dynamic_graph_fed_rl.server.app:main"
dgfrl-agent = "dynamic_graph_fed_rl.agent.cli:main"
dgfrl-saas = "dynamic_graph_fed_rl.saas.app:main"

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D"]  # Allow assert statements and missing docstrings in tests
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["dynamic_graph_fed_rl"]
force-single-line = true